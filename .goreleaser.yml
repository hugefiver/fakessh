project_name: fakessh

builds:
  - &default
    skip: true
    binary: fakessh
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X "main.version={{ .Version }}"
      - -X "main.goversion={{ .Env.GOVERSION }}"
      - -X "main.buildTime={{ .Env.BUILD_TIME }}"
      - -X "main.commitId={{ .Env.COMMIT }}"
    goos:
      - windows
      - darwin
      - linux
      - openbsd
      - freebsd
      - netbsd
      - plan9
      - dragonfly
      - solaris
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
      - mips64
      - mips64le
      - mips
      - riscv64
    goarm:
      - "6"
      - "7"
    goamd64:
      - v1
      - v2
      - v3
    ignore:
      - goos: darwin
        goarch: amd64
        goamd64: v2

  - <<: *default
    id: snapshot
    skip: true
    flags:
      - -trimpath
    ldflags:
      - -s -w

  - <<: *default
    id: default
    skip: false
    flags:
      - -trimpath

  - <<: *default
    id: nogitserver
    skip: false
    flags:
      - -trimpath
    tags:
      - ignore_gitserver

archives:
  - id: default
    builds:
      - default
      - snapshot
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE

  - id: nogitserver
    builds:
      - nogitserver
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}_minimal"
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE
  
  - id: macos_universal
    builds:
      - macos_universal
    name_template: "{{ .ProjectName }}_{{ .Version }}_macosuniversal"
    files:
      - LICENSE

universal_binaries:
  - id: macos_universal
    ids: 
      - default
      - snapshot
    replace: false
    name_template: "{{ .ProjectName }}"
